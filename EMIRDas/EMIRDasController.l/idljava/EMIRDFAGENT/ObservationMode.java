package EMIRDFAGENT;


/**
* EMIRDFAGENT/ObservationMode.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from EMIRDFAGENT.idl
* lunes 18 de mayo de 2015 13H52' WEST
*/


//  };
public class ObservationMode implements org.omg.CORBA.portable.IDLEntity
{
  private        int __value;
  private static int __size = 47;
  private static EMIRDFAGENT.ObservationMode[] __array = new EMIRDFAGENT.ObservationMode [__size];

  public static final int _IMAGE_BIAS = 0;
  public static final EMIRDFAGENT.ObservationMode IMAGE_BIAS = new EMIRDFAGENT.ObservationMode(_IMAGE_BIAS);
  public static final int _IMAGE_DARK = 1;
  public static final EMIRDFAGENT.ObservationMode IMAGE_DARK = new EMIRDFAGENT.ObservationMode(_IMAGE_DARK);
  public static final int _IMAGE_FLAT = 2;
  public static final EMIRDFAGENT.ObservationMode IMAGE_FLAT = new EMIRDFAGENT.ObservationMode(_IMAGE_FLAT);
  public static final int _IMAGE_SKY = 3;
  public static final EMIRDFAGENT.ObservationMode IMAGE_SKY = new EMIRDFAGENT.ObservationMode(_IMAGE_SKY);
  public static final int _DEAD_PX_MASK = 4;
  public static final EMIRDFAGENT.ObservationMode DEAD_PX_MASK = new EMIRDFAGENT.ObservationMode(_DEAD_PX_MASK);
  public static final int _IMAGE_FLAT_D = 5;
  public static final EMIRDFAGENT.ObservationMode IMAGE_FLAT_D = new EMIRDFAGENT.ObservationMode(_IMAGE_FLAT_D);
  public static final int _MSM_SPECTRAL_FLAT_FIELD = 6;
  public static final EMIRDFAGENT.ObservationMode MSM_SPECTRAL_FLAT_FIELD = new EMIRDFAGENT.ObservationMode(_MSM_SPECTRAL_FLAT_FIELD);
  public static final int _SPEC_SKY = 7;
  public static final EMIRDFAGENT.ObservationMode SPEC_SKY = new EMIRDFAGENT.ObservationMode(_SPEC_SKY);
  public static final int _SPEC_DARK = 8;
  public static final EMIRDFAGENT.ObservationMode SPEC_DARK = new EMIRDFAGENT.ObservationMode(_SPEC_DARK);
  public static final int _SPEC_FLAT = 9;
  public static final EMIRDFAGENT.ObservationMode SPEC_FLAT = new EMIRDFAGENT.ObservationMode(_SPEC_FLAT);
  public static final int _SLIT_TRANSM_CALIBR = 10;
  public static final EMIRDFAGENT.ObservationMode SLIT_TRANSM_CALIBR = new EMIRDFAGENT.ObservationMode(_SLIT_TRANSM_CALIBR);
  public static final int _WAVELENGTH_CALIBR = 11;
  public static final EMIRDFAGENT.ObservationMode WAVELENGTH_CALIBR = new EMIRDFAGENT.ObservationMode(_WAVELENGTH_CALIBR);
  public static final int _TS_ROUGH_FOCUS = 12;
  public static final EMIRDFAGENT.ObservationMode TS_ROUGH_FOCUS = new EMIRDFAGENT.ObservationMode(_TS_ROUGH_FOCUS);
  public static final int _TS_FINE_FOCUS = 13;
  public static final EMIRDFAGENT.ObservationMode TS_FINE_FOCUS = new EMIRDFAGENT.ObservationMode(_TS_FINE_FOCUS);
  public static final int _EMIR_FOCUS_CTL = 14;
  public static final EMIRDFAGENT.ObservationMode EMIR_FOCUS_CTL = new EMIRDFAGENT.ObservationMode(_EMIR_FOCUS_CTL);
  public static final int _IMAGE_ACQUISTION = 15;
  public static final EMIRDFAGENT.ObservationMode IMAGE_ACQUISTION = new EMIRDFAGENT.ObservationMode(_IMAGE_ACQUISTION);
  public static final int _MOS_LONG_SLIT = 16;
  public static final EMIRDFAGENT.ObservationMode MOS_LONG_SLIT = new EMIRDFAGENT.ObservationMode(_MOS_LONG_SLIT);
  public static final int _TARGET_ACQUISITION = 17;
  public static final EMIRDFAGENT.ObservationMode TARGET_ACQUISITION = new EMIRDFAGENT.ObservationMode(_TARGET_ACQUISITION);
  public static final int _MASK_IMAGING = 18;
  public static final EMIRDFAGENT.ObservationMode MASK_IMAGING = new EMIRDFAGENT.ObservationMode(_MASK_IMAGING);
  public static final int _MSM_LSM_CHECK = 19;
  public static final EMIRDFAGENT.ObservationMode MSM_LSM_CHECK = new EMIRDFAGENT.ObservationMode(_MSM_LSM_CHECK);
  public static final int _STARE_IMAGE = 20;
  public static final EMIRDFAGENT.ObservationMode STARE_IMAGE = new EMIRDFAGENT.ObservationMode(_STARE_IMAGE);
  public static final int _NODDED_BEAM_SWITCHED_IMAGE = 21;
  public static final EMIRDFAGENT.ObservationMode NODDED_BEAM_SWITCHED_IMAGE = new EMIRDFAGENT.ObservationMode(_NODDED_BEAM_SWITCHED_IMAGE);
  public static final int _DITHERED_IMAGE = 22;
  public static final EMIRDFAGENT.ObservationMode DITHERED_IMAGE = new EMIRDFAGENT.ObservationMode(_DITHERED_IMAGE);
  public static final int _MICRODITHERED_IMAGE = 23;
  public static final EMIRDFAGENT.ObservationMode MICRODITHERED_IMAGE = new EMIRDFAGENT.ObservationMode(_MICRODITHERED_IMAGE);
  public static final int _MOSAICED_IMAGE = 24;
  public static final EMIRDFAGENT.ObservationMode MOSAICED_IMAGE = new EMIRDFAGENT.ObservationMode(_MOSAICED_IMAGE);
  public static final int _STARE_SPECTRA = 25;
  public static final EMIRDFAGENT.ObservationMode STARE_SPECTRA = new EMIRDFAGENT.ObservationMode(_STARE_SPECTRA);
  public static final int _DITHERED_NODDED_SPECTRA_ALONG_SLIT = 26;
  public static final EMIRDFAGENT.ObservationMode DITHERED_NODDED_SPECTRA_ALONG_SLIT = new EMIRDFAGENT.ObservationMode(_DITHERED_NODDED_SPECTRA_ALONG_SLIT);
  public static final int _OFFSET_SPECTRA_BEYOND_SLIT = 27;
  public static final EMIRDFAGENT.ObservationMode OFFSET_SPECTRA_BEYOND_SLIT = new EMIRDFAGENT.ObservationMode(_OFFSET_SPECTRA_BEYOND_SLIT);
  public static final int _RASTER_SPECTRA = 28;
  public static final EMIRDFAGENT.ObservationMode RASTER_SPECTRA = new EMIRDFAGENT.ObservationMode(_RASTER_SPECTRA);
  public static final int _DTU_X_Y_CALIBRATION = 29;
  public static final EMIRDFAGENT.ObservationMode DTU_X_Y_CALIBRATION = new EMIRDFAGENT.ObservationMode(_DTU_X_Y_CALIBRATION);
  public static final int _DTU_Z_CALIBRATION = 30;
  public static final EMIRDFAGENT.ObservationMode DTU_Z_CALIBRATION = new EMIRDFAGENT.ObservationMode(_DTU_Z_CALIBRATION);
  public static final int _DTU_FLEXURE_COMP = 31;
  public static final EMIRDFAGENT.ObservationMode DTU_FLEXURE_COMP = new EMIRDFAGENT.ObservationMode(_DTU_FLEXURE_COMP);
  public static final int _CSU2DETECTOR_CALIBRATION = 32;
  public static final EMIRDFAGENT.ObservationMode CSU2DETECTOR_CALIBRATION = new EMIRDFAGENT.ObservationMode(_CSU2DETECTOR_CALIBRATION);
  public static final int _LATERAL_COLOUR = 33;
  public static final EMIRDFAGENT.ObservationMode LATERAL_COLOUR = new EMIRDFAGENT.ObservationMode(_LATERAL_COLOUR);
  public static final int _SPECTRAL_CHARACTERIZATION = 34;
  public static final EMIRDFAGENT.ObservationMode SPECTRAL_CHARACTERIZATION = new EMIRDFAGENT.ObservationMode(_SPECTRAL_CHARACTERIZATION);
  public static final int _CENTRE_ROTATION = 35;
  public static final EMIRDFAGENT.ObservationMode CENTRE_ROTATION = new EMIRDFAGENT.ObservationMode(_CENTRE_ROTATION);
  public static final int _ASTROMETRIC_CALIBRATION = 36;
  public static final EMIRDFAGENT.ObservationMode ASTROMETRIC_CALIBRATION = new EMIRDFAGENT.ObservationMode(_ASTROMETRIC_CALIBRATION);
  public static final int _PHOTOMETRIC_CALIBRATION = 37;
  public static final EMIRDFAGENT.ObservationMode PHOTOMETRIC_CALIBRATION = new EMIRDFAGENT.ObservationMode(_PHOTOMETRIC_CALIBRATION);
  public static final int _SPECTROPHOTOMETRIC_CALIBRATION = 38;
  public static final EMIRDFAGENT.ObservationMode SPECTROPHOTOMETRIC_CALIBRATION = new EMIRDFAGENT.ObservationMode(_SPECTROPHOTOMETRIC_CALIBRATION);
  public static final int _TEST0 = 39;
  public static final EMIRDFAGENT.ObservationMode TEST0 = new EMIRDFAGENT.ObservationMode(_TEST0);
  public static final int _TEST1 = 40;
  public static final EMIRDFAGENT.ObservationMode TEST1 = new EMIRDFAGENT.ObservationMode(_TEST1);
  public static final int _TEST2 = 41;
  public static final EMIRDFAGENT.ObservationMode TEST2 = new EMIRDFAGENT.ObservationMode(_TEST2);
  public static final int _TEST3 = 42;
  public static final EMIRDFAGENT.ObservationMode TEST3 = new EMIRDFAGENT.ObservationMode(_TEST3);
  public static final int _TEST4 = 43;
  public static final EMIRDFAGENT.ObservationMode TEST4 = new EMIRDFAGENT.ObservationMode(_TEST4);
  public static final int _TEST5 = 44;
  public static final EMIRDFAGENT.ObservationMode TEST5 = new EMIRDFAGENT.ObservationMode(_TEST5);
  public static final int _TEST6 = 45;
  public static final EMIRDFAGENT.ObservationMode TEST6 = new EMIRDFAGENT.ObservationMode(_TEST6);
  public static final int _TEST7 = 46;
  public static final EMIRDFAGENT.ObservationMode TEST7 = new EMIRDFAGENT.ObservationMode(_TEST7);

  public int value ()
  {
    return __value;
  }

  public static EMIRDFAGENT.ObservationMode from_int (int value)
  {
    if (value >= 0 && value < __size)
      return __array[value];
    else
      throw new org.omg.CORBA.BAD_PARAM ();
  }

  protected ObservationMode (int value)
  {
    __value = value;
    __array[__value] = this;
  }
} // class ObservationMode
