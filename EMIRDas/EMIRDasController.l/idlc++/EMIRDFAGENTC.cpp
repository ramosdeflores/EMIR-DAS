// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be/be_codegen.cpp:323


#include "EMIRDFAGENTC.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/Typecode.h"
#include "tao/Any_Impl_T.h"
#include "tao/Any_Basic_Impl_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Var_Size_Argument_T.h"
#include "ace/OS_NS_string.h"

#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "EMIRDFAGENTC.i"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:64

// Arg traits specializations.
namespace TAO
{
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:618

#if !defined (_DGT_TINYVECTOR__ARG_TRAITS_CS_)
#define _DGT_TINYVECTOR__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<DGT::TinyVector>
    : public
        Var_Size_Arg_Traits_T<
            DGT::TinyVector,
            DGT::TinyVector_var,
            DGT::TinyVector_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:618

#if !defined (_DGT_TIMEVALUE__ARG_TRAITS_CS_)
#define _DGT_TIMEVALUE__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<DGT::TimeValue>
    : public
        Fixed_Size_Arg_Traits_T<
            DGT::TimeValue
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:618

#if !defined (_DGT_TIMEINTERVAL__ARG_TRAITS_CS_)
#define _DGT_TIMEINTERVAL__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<DGT::TimeInterval>
    : public
        Fixed_Size_Arg_Traits_T<
            DGT::TimeInterval
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:618

#if !defined (_MM_CONFIG__ARG_TRAITS_CS_)
#define _MM_CONFIG__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<MM::Config>
    : public
        Var_Size_Arg_Traits_T<
            MM::Config,
            MM::Config_var,
            MM::Config_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:379

#if !defined (_MM_DATABLOCKLIST__ARG_TRAITS_CS_)
#define _MM_DATABLOCKLIST__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<MM::DataBlockList>
    : public
        Var_Size_Arg_Traits_T<
            MM::DataBlockList,
            MM::DataBlockList_var,
            MM::DataBlockList_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:379

#if !defined (_MM_STATECHANGELIST__ARG_TRAITS_CS_)
#define _MM_STATECHANGELIST__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<MM::StateChangeList>
    : public
        Var_Size_Arg_Traits_T<
            MM::StateChangeList,
            MM::StateChangeList_var,
            MM::StateChangeList_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:379

#if !defined (_MM_MAGNITUDECHANGELIST__ARG_TRAITS_CS_)
#define _MM_MAGNITUDECHANGELIST__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<MM::MagnitudeChangeList>
    : public
        Var_Size_Arg_Traits_T<
            MM::MagnitudeChangeList,
            MM::MagnitudeChangeList_var,
            MM::MagnitudeChangeList_out
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_MM_CONSUMER_IFCE__ARG_TRAITS_CS_)
#define _MM_CONSUMER_IFCE__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<MM::Consumer_ifce>
    : public
        Object_Arg_Traits_T<
            MM::Consumer_ifce_ptr,
            MM::Consumer_ifce_var,
            MM::Consumer_ifce_out,
            TAO::Objref_Traits<MM::Consumer_ifce>
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:379

#if !defined (_CONFIG_PROPERTYCHANGELIST__ARG_TRAITS_CS_)
#define _CONFIG_PROPERTYCHANGELIST__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<CONFIG::PropertyChangeList>
    : public
        Var_Size_Arg_Traits_T<
            CONFIG::PropertyChangeList,
            CONFIG::PropertyChangeList_var,
            CONFIG::PropertyChangeList_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:618

#if !defined (_DDPKF_FRAME__ARG_TRAITS_CS_)
#define _DDPKF_FRAME__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<DDPKF::Frame>
    : public
        Var_Size_Arg_Traits_T<
            DDPKF::Frame,
            DDPKF::Frame_var,
            DDPKF::Frame_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:537

#if !defined (_DFAGENT_OBSERVATIONTYPE__ARG_TRAITS_CS_)
#define _DFAGENT_OBSERVATIONTYPE__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<DFAGENT::ObservationType>
    : public
        Basic_Arg_Traits_T<
            DFAGENT::ObservationType
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:537

#if !defined (_DFAGENT_OBSERVATIONCLASS__ARG_TRAITS_CS_)
#define _DFAGENT_OBSERVATIONCLASS__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<DFAGENT::ObservationClass>
    : public
        Basic_Arg_Traits_T<
            DFAGENT::ObservationClass
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:537

#if !defined (_EMIRDFAGENT_OBSERVATIONMODE__ARG_TRAITS_CS_)
#define _EMIRDFAGENT_OBSERVATIONMODE__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class  Arg_Traits<EMIRDFAGENT::ObservationMode>
    : public
        Basic_Arg_Traits_T<
            EMIRDFAGENT::ObservationMode
          >
  {
  };

#endif /* end #if !defined */
}


// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_EMIRDFAGENT_ObservationMode[] =
{
  TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6774632f), 
  ACE_NTOHL (0x454d4952), 
  ACE_NTOHL (0x44464147), 
  ACE_NTOHL (0x454e542f), 
  ACE_NTOHL (0x4f627365), 
  ACE_NTOHL (0x72766174), 
  ACE_NTOHL (0x696f6e4d), 
  ACE_NTOHL (0x6f64653a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:gtc/EMIRDFAGENT/ObservationMode:1.0
  16,
  ACE_NTOHL (0x4f627365), 
  ACE_NTOHL (0x72766174), 
  ACE_NTOHL (0x696f6e4d), 
  ACE_NTOHL (0x6f646500),  // name = ObservationMode
  47, // member count
  11,
  ACE_NTOHL (0x494d4147), 
  ACE_NTOHL (0x455f4249), 
  ACE_NTOHL (0x41530000),  // name = IMAGE_BIAS
  11,
  ACE_NTOHL (0x494d4147), 
  ACE_NTOHL (0x455f4441), 
  ACE_NTOHL (0x524b0000),  // name = IMAGE_DARK
  11,
  ACE_NTOHL (0x494d4147), 
  ACE_NTOHL (0x455f464c), 
  ACE_NTOHL (0x41540000),  // name = IMAGE_FLAT
  10,
  ACE_NTOHL (0x494d4147), 
  ACE_NTOHL (0x455f534b), 
  ACE_NTOHL (0x59000000),  // name = IMAGE_SKY
  13,
  ACE_NTOHL (0x44454144), 
  ACE_NTOHL (0x5f50585f), 
  ACE_NTOHL (0x4d41534b), 
  ACE_NTOHL (0x0),  // name = DEAD_PX_MASK
  13,
  ACE_NTOHL (0x494d4147), 
  ACE_NTOHL (0x455f464c), 
  ACE_NTOHL (0x41545f44), 
  ACE_NTOHL (0x0),  // name = IMAGE_FLAT_D
  24,
  ACE_NTOHL (0x4d534d5f), 
  ACE_NTOHL (0x53504543), 
  ACE_NTOHL (0x5452414c), 
  ACE_NTOHL (0x5f464c41), 
  ACE_NTOHL (0x545f4649), 
  ACE_NTOHL (0x454c4400),  // name = MSM_SPECTRAL_FLAT_FIELD
  9,
  ACE_NTOHL (0x53504543), 
  ACE_NTOHL (0x5f534b59), 
  ACE_NTOHL (0x0),  // name = SPEC_SKY
  10,
  ACE_NTOHL (0x53504543), 
  ACE_NTOHL (0x5f444152), 
  ACE_NTOHL (0x4b000000),  // name = SPEC_DARK
  10,
  ACE_NTOHL (0x53504543), 
  ACE_NTOHL (0x5f464c41), 
  ACE_NTOHL (0x54000000),  // name = SPEC_FLAT
  19,
  ACE_NTOHL (0x534c4954), 
  ACE_NTOHL (0x5f545241), 
  ACE_NTOHL (0x4e534d5f), 
  ACE_NTOHL (0x43414c49), 
  ACE_NTOHL (0x42520000),  // name = SLIT_TRANSM_CALIBR
  18,
  ACE_NTOHL (0x57415645), 
  ACE_NTOHL (0x4c454e47), 
  ACE_NTOHL (0x54485f43), 
  ACE_NTOHL (0x414c4942), 
  ACE_NTOHL (0x52000000),  // name = WAVELENGTH_CALIBR
  15,
  ACE_NTOHL (0x54535f52), 
  ACE_NTOHL (0x4f554748), 
  ACE_NTOHL (0x5f464f43), 
  ACE_NTOHL (0x55530000),  // name = TS_ROUGH_FOCUS
  14,
  ACE_NTOHL (0x54535f46), 
  ACE_NTOHL (0x494e455f), 
  ACE_NTOHL (0x464f4355), 
  ACE_NTOHL (0x53000000),  // name = TS_FINE_FOCUS
  15,
  ACE_NTOHL (0x454d4952), 
  ACE_NTOHL (0x5f464f43), 
  ACE_NTOHL (0x55535f43), 
  ACE_NTOHL (0x544c0000),  // name = EMIR_FOCUS_CTL
  17,
  ACE_NTOHL (0x494d4147), 
  ACE_NTOHL (0x455f4143), 
  ACE_NTOHL (0x51554953), 
  ACE_NTOHL (0x54494f4e), 
  ACE_NTOHL (0x0),  // name = IMAGE_ACQUISTION
  14,
  ACE_NTOHL (0x4d4f535f), 
  ACE_NTOHL (0x4c4f4e47), 
  ACE_NTOHL (0x5f534c49), 
  ACE_NTOHL (0x54000000),  // name = MOS_LONG_SLIT
  19,
  ACE_NTOHL (0x54415247), 
  ACE_NTOHL (0x45545f41), 
  ACE_NTOHL (0x43515549), 
  ACE_NTOHL (0x53495449), 
  ACE_NTOHL (0x4f4e0000),  // name = TARGET_ACQUISITION
  13,
  ACE_NTOHL (0x4d41534b), 
  ACE_NTOHL (0x5f494d41), 
  ACE_NTOHL (0x47494e47), 
  ACE_NTOHL (0x0),  // name = MASK_IMAGING
  14,
  ACE_NTOHL (0x4d534d5f), 
  ACE_NTOHL (0x4c534d5f), 
  ACE_NTOHL (0x43484543), 
  ACE_NTOHL (0x4b000000),  // name = MSM_LSM_CHECK
  12,
  ACE_NTOHL (0x53544152), 
  ACE_NTOHL (0x455f494d), 
  ACE_NTOHL (0x41474500),  // name = STARE_IMAGE
  27,
  ACE_NTOHL (0x4e4f4444), 
  ACE_NTOHL (0x45445f42), 
  ACE_NTOHL (0x45414d5f), 
  ACE_NTOHL (0x53574954), 
  ACE_NTOHL (0x43484544), 
  ACE_NTOHL (0x5f494d41), 
  ACE_NTOHL (0x47450000),  // name = NODDED_BEAM_SWITCHED_IMAGE
  15,
  ACE_NTOHL (0x44495448), 
  ACE_NTOHL (0x45524544), 
  ACE_NTOHL (0x5f494d41), 
  ACE_NTOHL (0x47450000),  // name = DITHERED_IMAGE
  20,
  ACE_NTOHL (0x4d494352), 
  ACE_NTOHL (0x4f444954), 
  ACE_NTOHL (0x48455245), 
  ACE_NTOHL (0x445f494d), 
  ACE_NTOHL (0x41474500),  // name = MICRODITHERED_IMAGE
  15,
  ACE_NTOHL (0x4d4f5341), 
  ACE_NTOHL (0x49434544), 
  ACE_NTOHL (0x5f494d41), 
  ACE_NTOHL (0x47450000),  // name = MOSAICED_IMAGE
  14,
  ACE_NTOHL (0x53544152), 
  ACE_NTOHL (0x455f5350), 
  ACE_NTOHL (0x45435452), 
  ACE_NTOHL (0x41000000),  // name = STARE_SPECTRA
  35,
  ACE_NTOHL (0x44495448), 
  ACE_NTOHL (0x45524544), 
  ACE_NTOHL (0x5f4e4f44), 
  ACE_NTOHL (0x4445445f), 
  ACE_NTOHL (0x53504543), 
  ACE_NTOHL (0x5452415f), 
  ACE_NTOHL (0x414c4f4e), 
  ACE_NTOHL (0x475f534c), 
  ACE_NTOHL (0x49540000),  // name = DITHERED_NODDED_SPECTRA_ALONG_SLIT
  27,
  ACE_NTOHL (0x4f464653), 
  ACE_NTOHL (0x45545f53), 
  ACE_NTOHL (0x50454354), 
  ACE_NTOHL (0x52415f42), 
  ACE_NTOHL (0x45594f4e), 
  ACE_NTOHL (0x445f534c), 
  ACE_NTOHL (0x49540000),  // name = OFFSET_SPECTRA_BEYOND_SLIT
  15,
  ACE_NTOHL (0x52415354), 
  ACE_NTOHL (0x45525f53), 
  ACE_NTOHL (0x50454354), 
  ACE_NTOHL (0x52410000),  // name = RASTER_SPECTRA
  20,
  ACE_NTOHL (0x4454555f), 
  ACE_NTOHL (0x585f595f), 
  ACE_NTOHL (0x43414c49), 
  ACE_NTOHL (0x42524154), 
  ACE_NTOHL (0x494f4e00),  // name = DTU_X_Y_CALIBRATION
  18,
  ACE_NTOHL (0x4454555f), 
  ACE_NTOHL (0x5a5f4341), 
  ACE_NTOHL (0x4c494252), 
  ACE_NTOHL (0x4154494f), 
  ACE_NTOHL (0x4e000000),  // name = DTU_Z_CALIBRATION
  17,
  ACE_NTOHL (0x4454555f), 
  ACE_NTOHL (0x464c4558), 
  ACE_NTOHL (0x5552455f), 
  ACE_NTOHL (0x434f4d50), 
  ACE_NTOHL (0x0),  // name = DTU_FLEXURE_COMP
  25,
  ACE_NTOHL (0x43535532), 
  ACE_NTOHL (0x44455445), 
  ACE_NTOHL (0x43544f52), 
  ACE_NTOHL (0x5f43414c), 
  ACE_NTOHL (0x49425241), 
  ACE_NTOHL (0x54494f4e), 
  ACE_NTOHL (0x0),  // name = CSU2DETECTOR_CALIBRATION
  15,
  ACE_NTOHL (0x4c415445), 
  ACE_NTOHL (0x52414c5f), 
  ACE_NTOHL (0x434f4c4f), 
  ACE_NTOHL (0x55520000),  // name = LATERAL_COLOUR
  26,
  ACE_NTOHL (0x53504543), 
  ACE_NTOHL (0x5452414c), 
  ACE_NTOHL (0x5f434841), 
  ACE_NTOHL (0x52414354), 
  ACE_NTOHL (0x4552495a), 
  ACE_NTOHL (0x4154494f), 
  ACE_NTOHL (0x4e000000),  // name = SPECTRAL_CHARACTERIZATION
  16,
  ACE_NTOHL (0x43454e54), 
  ACE_NTOHL (0x52455f52), 
  ACE_NTOHL (0x4f544154), 
  ACE_NTOHL (0x494f4e00),  // name = CENTRE_ROTATION
  24,
  ACE_NTOHL (0x41535452), 
  ACE_NTOHL (0x4f4d4554), 
  ACE_NTOHL (0x5249435f), 
  ACE_NTOHL (0x43414c49), 
  ACE_NTOHL (0x42524154), 
  ACE_NTOHL (0x494f4e00),  // name = ASTROMETRIC_CALIBRATION
  24,
  ACE_NTOHL (0x50484f54), 
  ACE_NTOHL (0x4f4d4554), 
  ACE_NTOHL (0x5249435f), 
  ACE_NTOHL (0x43414c49), 
  ACE_NTOHL (0x42524154), 
  ACE_NTOHL (0x494f4e00),  // name = PHOTOMETRIC_CALIBRATION
  31,
  ACE_NTOHL (0x53504543), 
  ACE_NTOHL (0x54524f50), 
  ACE_NTOHL (0x484f544f), 
  ACE_NTOHL (0x4d455452), 
  ACE_NTOHL (0x49435f43), 
  ACE_NTOHL (0x414c4942), 
  ACE_NTOHL (0x52415449), 
  ACE_NTOHL (0x4f4e0000),  // name = SPECTROPHOTOMETRIC_CALIBRATION
  6,
  ACE_NTOHL (0x54455354), 
  ACE_NTOHL (0x30000000),  // name = TEST0
  6,
  ACE_NTOHL (0x54455354), 
  ACE_NTOHL (0x31000000),  // name = TEST1
  6,
  ACE_NTOHL (0x54455354), 
  ACE_NTOHL (0x32000000),  // name = TEST2
  6,
  ACE_NTOHL (0x54455354), 
  ACE_NTOHL (0x33000000),  // name = TEST3
  6,
  ACE_NTOHL (0x54455354), 
  ACE_NTOHL (0x34000000),  // name = TEST4
  6,
  ACE_NTOHL (0x54455354), 
  ACE_NTOHL (0x35000000),  // name = TEST5
  6,
  ACE_NTOHL (0x54455354), 
  ACE_NTOHL (0x36000000),  // name = TEST6
  6,
  ACE_NTOHL (0x54455354), 
  ACE_NTOHL (0x37000000),  // name = TEST7
  };

static CORBA::TypeCode _tc_TAO_tc_EMIRDFAGENT_ObservationMode (
    CORBA::tk_enum,
    sizeof (_oc_EMIRDFAGENT_ObservationMode),
    (char *) &_oc_EMIRDFAGENT_ObservationMode,
    0,
    sizeof (EMIRDFAGENT::ObservationMode)
  );

namespace EMIRDFAGENT
{
  ::CORBA::TypeCode_ptr _tc_ObservationMode =
    &_tc_TAO_tc_EMIRDFAGENT_ObservationMode;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:60

// Traits specializations for EMIRDFAGENT::EMIRDFAgent_ifce.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
EMIRDFAGENT::EMIRDFAgent_ifce_ptr
TAO::Objref_Traits<EMIRDFAGENT::EMIRDFAgent_ifce>::tao_duplicate (
    EMIRDFAGENT::EMIRDFAgent_ifce_ptr p
  )
{
  return EMIRDFAGENT::EMIRDFAgent_ifce::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<EMIRDFAGENT::EMIRDFAgent_ifce>::tao_release (
    EMIRDFAGENT::EMIRDFAgent_ifce_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
EMIRDFAGENT::EMIRDFAgent_ifce_ptr
TAO::Objref_Traits<EMIRDFAGENT::EMIRDFAgent_ifce>::tao_nil (void)
{
  return EMIRDFAGENT::EMIRDFAgent_ifce::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<EMIRDFAGENT::EMIRDFAgent_ifce>::tao_marshal (
    EMIRDFAGENT::EMIRDFAgent_ifce_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*EMIRDFAGENT__TAO_EMIRDFAgent_ifce_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setObsMode (
    EMIRDFAGENT::ObservationMode obsMode
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<EMIRDFAGENT::ObservationMode>::in_arg_val _tao_obsMode (obsMode);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_obsMode
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setObsMode_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setObsMode",
      10,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setObsMode_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setNumberOfImagesToCollect (
    CORBA::Long value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumberOfImagesToCollect_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setNumberOfImagesToCollect",
      26,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumberOfImagesToCollect_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setNumberOfReadsInAPoint (
    CORBA::Long value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumberOfReadsInAPoint_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setNumberOfReadsInAPoint",
      24,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumberOfReadsInAPoint_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setFilterName (
    const char * filter,
    CORBA::Short position
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_filter (filter);
  TAO::Arg_Traits<CORBA::Short>::in_arg_val _tao_position (position);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_filter,
      &_tao_position
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setFilterName_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "setFilterName",
      13,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setFilterName_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setGrismName (
    const char * grism
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_grism (grism);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_grism
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setGrismName_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setGrismName",
      12,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setGrismName_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setCSUConfFile (
    const char * file
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_file (file);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_file
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setCSUConfFile_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setCSUConfFile",
      14,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setCSUConfFile_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::endSequence (
    CORBA::Boolean value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<ACE_InputCDR::to_boolean>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_endSequence_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "endSequence",
      11,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_endSequence_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setFlip (
    CORBA::Boolean value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<ACE_InputCDR::to_boolean>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setFlip_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setFlip",
      7,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setFlip_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setRotatorOffset (
    CORBA::Double value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setRotatorOffset_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setRotatorOffset",
      16,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setRotatorOffset_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setReferencePixel (
    CORBA::Double pixelX,
    CORBA::Double pixelY
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_pixelX (pixelX);
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_pixelY (pixelY);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_pixelX,
      &_tao_pixelY
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setReferencePixel_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "setReferencePixel",
      17,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setReferencePixel_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setPlateScale (
    CORBA::Double value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setPlateScale_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setPlateScale",
      13,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setPlateScale_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setInstrumentPositionAngle (
    CORBA::Double value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setInstrumentPositionAngle_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setInstrumentPositionAngle",
      26,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setInstrumentPositionAngle_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setDetectorPositionAngle (
    CORBA::Double value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setDetectorPositionAngle_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setDetectorPositionAngle",
      24,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setDetectorPositionAngle_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setDTUPositionAngle (
    CORBA::Double value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setDTUPositionAngle_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setDTUPositionAngle",
      19,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setDTUPositionAngle_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setFocalPlanePositionAngle (
    CORBA::Double value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setFocalPlanePositionAngle_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setFocalPlanePositionAngle",
      26,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setFocalPlanePositionAngle_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setPixelSizeAtDetector (
    CORBA::Double value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setPixelSizeAtDetector_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setPixelSizeAtDetector",
      22,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setPixelSizeAtDetector_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setPixelSizeAtFocalPlane (
    CORBA::Double value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setPixelSizeAtFocalPlane_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setPixelSizeAtFocalPlane",
      24,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setPixelSizeAtFocalPlane_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setDTU_FOV (
    CORBA::Long valueX,
    CORBA::Long valueY,
    CORBA::Long valueZ
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_valueX (valueX);
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_valueY (valueY);
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_valueZ (valueZ);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_valueX,
      &_tao_valueY,
      &_tao_valueZ
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setDTU_FOV_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "setDTU_FOV",
      10,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setDTU_FOV_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setDTU_Factor (
    CORBA::Long valueX,
    CORBA::Long valueY,
    CORBA::Long valueZ
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_valueX (valueX);
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_valueY (valueY);
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_valueZ (valueZ);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_valueX,
      &_tao_valueY,
      &_tao_valueZ
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setDTU_Factor_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "setDTU_Factor",
      13,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setDTU_Factor_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setDTU_Commanded (
    CORBA::Long valueX,
    CORBA::Long valueY,
    CORBA::Long valueZ
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_valueX (valueX);
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_valueY (valueY);
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_valueZ (valueZ);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_valueX,
      &_tao_valueY,
      &_tao_valueZ
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setDTU_Commanded_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "setDTU_Commanded",
      16,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setDTU_Commanded_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setCoordinateType (
    const char * value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setCoordinateType_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setCoordinateType",
      17,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setCoordinateType_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setCRVAL (
    CORBA::Double alfa,
    CORBA::Double delta
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_alfa (alfa);
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_delta (delta);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_alfa,
      &_tao_delta
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setCRVAL_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "setCRVAL",
      8,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setCRVAL_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setDetectorCenter (
    CORBA::Long valueX,
    CORBA::Long valueY
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_valueX (valueX);
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_valueY (valueY);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_valueX,
      &_tao_valueY
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setDetectorCenter_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "setDetectorCenter",
      17,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setDetectorCenter_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setNumberCycle (
    const char * value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumberCycle_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setNumberCycle",
      14,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumberCycle_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setCryiostateVersion (
    const char * value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setCryiostateVersion_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setCryiostateVersion",
      20,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setCryiostateVersion_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setNumObservingBlock (
    CORBA::Long numTotalObservingBlocks,
    CORBA::Long numActualObservingBlock,
    CORBA::Long numTotalImagesInObsBlock,
    CORBA::Long numActualImageInObsBlock
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_numTotalObservingBlocks (numTotalObservingBlocks);
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_numActualObservingBlock (numActualObservingBlock);
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_numTotalImagesInObsBlock (numTotalImagesInObsBlock);
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_numActualImageInObsBlock (numActualImageInObsBlock);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_numTotalObservingBlocks,
      &_tao_numActualObservingBlock,
      &_tao_numTotalImagesInObsBlock,
      &_tao_numActualImageInObsBlock
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumObservingBlock_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "setNumObservingBlock",
      20,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumObservingBlock_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setNumTotalObservingBlocks (
    CORBA::Long value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumTotalObservingBlocks_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setNumTotalObservingBlocks",
      26,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumTotalObservingBlocks_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setNumActualObservingBlock (
    CORBA::Long value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumActualObservingBlock_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setNumActualObservingBlock",
      26,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumActualObservingBlock_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setNumTotalImagesInObsBlock (
    CORBA::Long value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumTotalImagesInObsBlock_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setNumTotalImagesInObsBlock",
      27,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumTotalImagesInObsBlock_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::setNumActualImageInObsBlock (
    CORBA::Long value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , DGT::GCSException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Long>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  static TAO::Exception_Data
  _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumActualImageInObsBlock_exceptiondata [] = 
    {
      {
        "IDL:gtc/DGT/GCSException:1.0",
        DGT::GCSException::_alloc,
        DGT::_tc_GCSException
      }
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setNumActualImageInObsBlock",
      27,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (
      _tao_EMIRDFAGENT_EMIRDFAgent_ifce_setNumActualImageInObsBlock_exceptiondata,
      1
      ACE_ENV_ARG_PARAMETER
    );
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

::EMIRDFAGENT::ObservationMode EMIRDFAGENT::EMIRDFAgent_ifce::obsMode (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<EMIRDFAGENT::ObservationMode>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_obsMode",
      12,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

CORBA::Boolean EMIRDFAGENT::EMIRDFAgent_ifce::isReceivingImageFinished (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_isReceivingImageFinished",
      29,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::observingEngineInstanceName (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_observingEngineInstanceName",
      32,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::observingEngineInstanceName (
    const char * observingEngineInstanceName
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_observingEngineInstanceName (observingEngineInstanceName);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_observingEngineInstanceName
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_observingEngineInstanceName",
      32,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::dfManagerInstanceName (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_dfManagerInstanceName",
      26,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::dfManagerInstanceName (
    const char * dfManagerInstanceName
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_dfManagerInstanceName (dfManagerInstanceName);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_dfManagerInstanceName
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_dfManagerInstanceName",
      26,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::dtuInstanceName (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_dtuInstanceName",
      20,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::dtuInstanceName (
    const char * dtuInstanceName
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_dtuInstanceName (dtuInstanceName);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_dtuInstanceName
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_dtuInstanceName",
      20,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::emirInstanceName (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_emirInstanceName",
      21,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::emirInstanceName (
    const char * emirInstanceName
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_emirInstanceName (emirInstanceName);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_emirInstanceName
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_emirInstanceName",
      21,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::flatsPath (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_flatsPath",
      14,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::flatsPath (
    const char * flatsPath
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_flatsPath (flatsPath);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_flatsPath
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_flatsPath",
      14,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::biasPath (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_biasPath",
      13,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::biasPath (
    const char * biasPath
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_biasPath (biasPath);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_biasPath
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_biasPath",
      13,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::darksPath (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_darksPath",
      14,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::darksPath (
    const char * darksPath
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_darksPath (darksPath);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_darksPath
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_darksPath",
      14,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::skyPath (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_skyPath",
      12,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::skyPath (
    const char * skyPath
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_skyPath (skyPath);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_skyPath
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_skyPath",
      12,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::pinholesPath (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_pinholesPath",
      17,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::pinholesPath (
    const char * pinholesPath
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_pinholesPath (pinholesPath);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_pinholesPath
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_pinholesPath",
      17,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::latitude (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_latitude",
      13,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::latitude (
    const char * latitude
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_latitude (latitude);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_latitude
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_latitude",
      13,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::longitude (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_longitude",
      14,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::longitude (
    const char * longitude
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_longitude (longitude);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_longitude
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_longitude",
      14,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::telescopeName (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_telescopeName",
      18,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::telescopeName (
    const char * telescopeName
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_telescopeName (telescopeName);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_telescopeName
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_telescopeName",
      18,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::originFITS (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_originFITS",
      15,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::originFITS (
    const char * originFITS
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_originFITS (originFITS);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_originFITS
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_originFITS",
      15,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

char * EMIRDFAGENT::EMIRDFAgent_ifce::observatoryName (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_observatoryName",
      20,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::observatoryName (
    const char * observatoryName
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Char *>::in_arg_val _tao_observatoryName (observatoryName);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_observatoryName
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_observatoryName",
      20,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

CORBA::Short EMIRDFAGENT::EMIRDFAgent_ifce::recenter (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Short>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_recenter",
      13,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::recenter (
    CORBA::Short recenter
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Short>::in_arg_val _tao_recenter (recenter);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_recenter
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_recenter",
      13,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

CORBA::Double EMIRDFAGENT::EMIRDFAgent_ifce::max_recenter_radius (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<CORBA::Double>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_max_recenter_radius",
      24,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:78

void EMIRDFAGENT::EMIRDFAgent_ifce::max_recenter_radius (
    CORBA::Double max_recenter_radius
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ == 0)
    {
      EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (
          this->ACE_NESTED_CLASS (CORBA, Object)::_is_collocated ()
        );
    }
  
  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits<CORBA::Double>::in_arg_val _tao_max_recenter_radius (max_recenter_radius);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_max_recenter_radius
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_max_recenter_radius",
      24,
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

EMIRDFAGENT::EMIRDFAgent_ifce::EMIRDFAgent_ifce (int collocated)
 : the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ (0)
{
  this->EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (collocated);
}

void
EMIRDFAGENT::EMIRDFAgent_ifce::EMIRDFAGENT_EMIRDFAgent_ifce_setup_collocation (int collocated)
{
  if (collocated)
    {
      this->the_TAO_EMIRDFAgent_ifce_Proxy_Broker_ =
        ::EMIRDFAGENT__TAO_EMIRDFAgent_ifce_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->DFAGENT_DFAgent_ifce_setup_collocation (collocated);
}

EMIRDFAGENT::EMIRDFAgent_ifce::~EMIRDFAgent_ifce (void)
{}

void 
EMIRDFAGENT::EMIRDFAgent_ifce::_tao_any_destructor (void *_tao_void_pointer)
{
  EMIRDFAgent_ifce *_tao_tmp_pointer =
    ACE_static_cast (EMIRDFAgent_ifce *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

EMIRDFAGENT::EMIRDFAgent_ifce_ptr
EMIRDFAGENT::EMIRDFAgent_ifce::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<EMIRDFAgent_ifce>::narrow (
        _tao_objref,
        "IDL:gtc/EMIRDFAGENT/EMIRDFAgent_ifce:1.0",
        EMIRDFAGENT__TAO_EMIRDFAgent_ifce_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

EMIRDFAGENT::EMIRDFAgent_ifce_ptr
EMIRDFAGENT::EMIRDFAgent_ifce::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<EMIRDFAgent_ifce>::unchecked_narrow (
        _tao_objref,
        "IDL:gtc/EMIRDFAGENT/EMIRDFAgent_ifce:1.0",
        EMIRDFAGENT__TAO_EMIRDFAgent_ifce_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

EMIRDFAGENT::EMIRDFAgent_ifce_ptr
EMIRDFAGENT::EMIRDFAgent_ifce::_duplicate (EMIRDFAgent_ifce_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
EMIRDFAGENT::EMIRDFAgent_ifce::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:gtc/MM/Monitor_ifce:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:gtc/DCF/Device_ifce:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:gtc/DF/RawFrameReceiver_ifce:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:gtc/DFAGENT/DFAgent_ifce:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:gtc/EMIRDFAGENT/EMIRDFAgent_ifce:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* EMIRDFAGENT::EMIRDFAgent_ifce::_interface_repository_id (void) const
{
  return "IDL:gtc/EMIRDFAGENT/EMIRDFAgent_ifce:1.0";
}

CORBA::Boolean
EMIRDFAGENT::EMIRDFAgent_ifce::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_EMIRDFAGENT_EMIRDFAgent_ifce[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  41,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6774632f), 
  ACE_NTOHL (0x454d4952), 
  ACE_NTOHL (0x44464147), 
  ACE_NTOHL (0x454e542f), 
  ACE_NTOHL (0x454d4952), 
  ACE_NTOHL (0x44464167), 
  ACE_NTOHL (0x656e745f), 
  ACE_NTOHL (0x69666365), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:gtc/EMIRDFAGENT/EMIRDFAgent_ifce:1.0
    17,
  ACE_NTOHL (0x454d4952), 
  ACE_NTOHL (0x44464167), 
  ACE_NTOHL (0x656e745f), 
  ACE_NTOHL (0x69666365), 
  ACE_NTOHL (0x0),  // name = EMIRDFAgent_ifce
  };

static CORBA::TypeCode _tc_TAO_tc_EMIRDFAGENT_EMIRDFAgent_ifce (
    CORBA::tk_objref,
    sizeof (_oc_EMIRDFAGENT_EMIRDFAgent_ifce),
    (char *) &_oc_EMIRDFAGENT_EMIRDFAgent_ifce,
    0,
    sizeof (EMIRDFAGENT::EMIRDFAgent_ifce)
  );

namespace EMIRDFAGENT
{
  ::CORBA::TypeCode_ptr _tc_EMIRDFAgent_ifce =
    &_tc_TAO_tc_EMIRDFAGENT_EMIRDFAgent_ifce;
}

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    EMIRDFAGENT::ObservationMode _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<EMIRDFAGENT::ObservationMode>::insert (
      _tao_any,
      EMIRDFAGENT::_tc_ObservationMode,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    EMIRDFAGENT::ObservationMode &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<EMIRDFAGENT::ObservationMode>::extract (
        _tao_any,
        EMIRDFAGENT::_tc_ObservationMode,
        _tao_elem 
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<EMIRDFAGENT::EMIRDFAgent_ifce>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    EMIRDFAGENT::EMIRDFAgent_ifce_ptr _tao_elem
  )
{
  EMIRDFAGENT::EMIRDFAgent_ifce_ptr _tao_objptr =
    EMIRDFAGENT::EMIRDFAgent_ifce::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    EMIRDFAGENT::EMIRDFAgent_ifce_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<EMIRDFAGENT::EMIRDFAgent_ifce>::insert (
      _tao_any,
      EMIRDFAGENT::EMIRDFAgent_ifce::_tao_any_destructor,
      EMIRDFAGENT::_tc_EMIRDFAgent_ifce,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    EMIRDFAGENT::EMIRDFAgent_ifce_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<EMIRDFAGENT::EMIRDFAgent_ifce>::extract (
        _tao_any,
        EMIRDFAGENT::EMIRDFAgent_ifce::_tao_any_destructor,
        EMIRDFAGENT::_tc_EMIRDFAgent_ifce,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const EMIRDFAGENT::EMIRDFAgent_ifce_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    EMIRDFAGENT::EMIRDFAgent_ifce_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if ((strm >> obj.inout ()) == 0)
    {
      return 0;
    }
  
  typedef ::EMIRDFAGENT::EMIRDFAgent_ifce RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        EMIRDFAGENT__TAO_EMIRDFAgent_ifce_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

